################################
# DisablePrintSpoolerServiceAD #
################################

function DisablePrintSpoolerServiceAD {
    
# Source : https://github.com/LaresLLC/CVE-2021-1675
# the script STOP and DISABLES Print Spooler service (aka #PrintNightmare) on each server from the list below IF ONLY DEFAULT PRINTERS EXIST.
# revert if you need: go to services.msc, find the "print spooler" service, change startup type to "automatic" and start the service.
# Source: https://github.com/gtworek/PSBits/blob/master/Misc/StopAndDisableDefaultSpoolers.ps1
#
# Requirements RSAT
# Get-Module -Name ActiveDirectory
# Import-Module -Name ActiveDirectory

$computers = Get-ADDomainController -filter * | %{ $_.name }

foreach ($computer in $computers)
{
    Write-Host "Processing $computer ..." 
    $service = Get-Service -ComputerName $computer -Name Spooler -ErrorAction SilentlyContinue
    if (!$service)
    {
        Write-Host "Cannot connect to Spooler Service on $computer. Skipping." -ForegroundColor Yellow
        continue
    }
    if ($service.Status -ne "Running")
    {
        Write-Host ("Service status is: """ + $service.Status + """. Skipping.") -ForegroundColor Yellow
        continue
    }
    $printers = (Get-WmiObject -class Win32_printer -ComputerName $computer)
    if (!$printers)
    {
        Write-Host "Cannot enumerate printers. Skipping." -ForegroundColor Yellow
        continue
    }

    $disableSpooler = $true
    foreach ($DriverName in ($printers.DriverName))
    {
        if (($DriverName -notmatch 'Microsoft XPS Document Writer') -and ($DriverName -notmatch 'Microsoft Print To PDF'))
        {
            Write-Host "  Printer found: $DriverName" -ForegroundColor Green
            $disableSpooler = $false
        }
    }
    if ($disableSpooler)
    {
        Write-Host "Only default printers found. Stopping and disabling spooler..." -ForegroundColor DarkCyan
        (Get-Service -ComputerName $computer -Name Spooler) | Stop-Service -Verbose
        Set-Service -ComputerName $computer -Name Spooler -StartupType Disabled -Verbose

    }
    else
    {
        Write-Host "Non-default printers found. Skipping." -ForegroundColor Green
    }
}

}# End Function DisablePrintSpoolerService

######################
# Send-RemoteCommand #
######################

function Send-RemoteCommand {
    param (
        $file = ".\cred.csv"
    )
    $listePC = Import-Csv -Path $file -Delimiter ","
    foreach ($PC in $listePC)
    {
        $pwd = ConvertTo-SecureString $PC.pass -AsPlainText -Force
        $Identite = New-Object System.Management.Automation.PSCredential($PC.user,$pwd)
        # Invoking function to remote computers, thank to below source.
        # https://stackoverflow.com/questions/11367367/how-do-i-include-a-locally-defined-function-when-using-powershells-invoke-comma
        Invoke-Command -ComputerName $PC.name -Credential $Identite -ScriptBlock ${function:DisablePrintSpoolerServiceAD}
    }
}# End Function Get-LocalDrives

####################
# Main Root Script #
####################

Send-RemoteCommand -file ".\PrintNightmare-Cred.csv"